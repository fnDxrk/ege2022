#Нам дан набор, состоящий из букв S, M, I, L, E. Из данного набора составляют слова длиной четыре символа, 
#самое главное – символы могут повторяться. Все слова, которые возможно составить, расположили в алфавитном порядке,
#а наша задача — найти порядковый номер слова LIME. В ответ запишите целое число – позиционный номер данного слова.
#Пример списка слов:
#1. EEEE
#2. EEEI
#3. EEEL
#4. EEEM
#5. EEES
#6. EEIE
#7. EEII
from itertools import *					#Добавляем библиотеку itertools со всеми функциями 
num = 0									#Создаём переменную для счета слов
for i in product('EILMS', repeat=4):	#Создаём цикл for, где используем функцию product: 																				
	num += 1							#1-ый параметр - буквы в алфавитном порядке; 2-ой параметр - кол-во букв в слове.
	if ''.join(i) == 'LIME':			#''.join(i) - объединение букв в одно слово переменной i
		print(num)

#Нам дан набор, состоящий из букв W, O, R, L, D. Из данного набора составляют слова длиной пять символов,
#а самое главное – символы могут повторяться. Все слова, которые возможно составить, расположили в алфавитном порядке,
#а наша задача — найти номер первого слова, начинающегося с буквы L. 
#В ответ запишите целое число – позиционный номер данного слова.
#Пример списка слов:
#1. DDDDD
#2. DDDDL
#3. DDDDO
#4. DDDDR
#5. DDDDW
#6. DDDLD
#7. DDDLL
from itertools import *
num = 0
for i in product('DLORW', repeat=5):
    num += 1
    if i[0] == 'L':
        print(num)
        break
#Нам дан набор, состоящий из букв H, O, M, E. Из данного набора составляют слова длиной три символа, 
#а самое главное – символы могут повторяться. Все слова, которые возможно составить, расположили в алфавитном порядке, 
#а наша задача — найти номер первого слова, в котором нет буквы E. 
#В ответ запишите целое число – позиционный номер данного слова.
#Пример списка слов:
#1. EEE
#2. EEH
#3. EEM
#4. EEO
#5. EHE
#6. EHH
#7. EHM
from itertools import *
num = 0
for i in product('EHMO', repeat=3):
	num += 1
	if 'E' not in i:
		print(num)
		break


#Нам дан набор, состоящий из букв W, X, Y, Z. Из данного набора составляют кодовые пароли длиной шесть символов, 
#самое главное – символы могут повторяться. Наша задача — определить количество кодов, 
#в которых буква Z встречается ровно 3 раза. В ответ запишите целое число – количество таких кодов.
from itertools import *
num = 0
for i in product('WXYZ', repeat=6):
	if i.count('Z') == 3:
		num += 1
print(num)

#Нам дан набор, состоящий из букв W, X, Y, Z. Из данного набора составляют кодовые пароли длиной пять символов, 
#самое главное – символы могут повторяться. Наша задача — определить количество кодов, 
#в которых буква W встречается не более 2 раз, но обязательно присутствует. 
#В ответ запишите целое число – количество таких кодов.
from itertools import *
num = 0
for i in product('WXYZ', repeat=5):
	if i.count('W') >= 1 and i.count('W') <= 2:
		num += 1
print(num)

#Нам дан набор, состоящий из букв A, B, C, D и цифр 1, 2, 3. Из данного набора составляют кодовые пароли длиной 4 символа, 
#самое главное – символы могут повторяться. Наша задача — определить количество кодов,
#в которых встречается ровно две цифры. В ответ запишите целое число – количество таких кодов.
from itertools import *
num = 0
for i in product('ABCD123', repeat=4):
	if (i.count('1') + i.count('2') + i.count('3')) == 2:
		num += 1
print(num)

#Нам дан набор, состоящий из цифр от 0 до 9. Из данного набора составляют кодовые пароли длиной 3 символа. 
#Наша задача — определить количество кодов, в которых все цифры различны. 
#В ответ запишите целое число – количество таких кодов.
from itertools import *
num = 0
for i in permutations('0123456789', 3):
	num += 1
print(num)

#Из слова WOWWOW составляют последовательности длиной 6 символов перестановкой букв. 
#Наша задача — определить количество таких последовательностей.
from itertools import *
num = 0
for i in set(permutations('WOWWOW', 6)):
	num += 1
print(num)